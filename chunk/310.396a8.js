"use strict";(self.webpackChunkSamsara=self.webpackChunkSamsara||[]).push([[310],{8310:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Trajectory)\n/* harmony export */ });\n/* harmony import */ var core_js_modules_esnext_iterator_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9070);\n/* harmony import */ var core_js_modules_esnext_iterator_for_each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1847);\n/* harmony import */ var core_js_modules_esnext_iterator_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2988);\n\n\n\nclass Trajectory extends ui.view.DefaultTheme.TrajectoryUI {\n  constructor() {\n    super();\n    let pos1 = [0, 0];\n    this.panelTrajectory.on(Laya.Event.MOUSE_DOWN, this, e => pos1 = [e.stageX, e.stageY]);\n    this.panelTrajectory.on(Laya.Event.MOUSE_UP, this, e => {\n      const distanceX = e.stageX - pos1[0];\n      const distanceY = e.stageY - pos1[1];\n      if (Math.sqrt(Math.abs(distanceX) + Math.abs(distanceY)) > 10) {\n        return;\n      }\n      this.onNext();\n    });\n    this.btnSummary.on(Laya.Event.CLICK, this, this.onSummary);\n    this.panelTrajectory.vScrollBar.elasticDistance = 150;\n    this.scbSpeed.on(Laya.Event.CHANGE, this, () => this.speed = this.scbSpeed.value);\n    this.scbSpeed.on(Laya.Event.MOUSE_UP, this, () => this.onNext());\n  }\n  AGE = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 2,\n    4: 3,\n    5: 3,\n    6: 4,\n    7: 5,\n    8: 5,\n    9: 6,\n    10: 6,\n    11: 7,\n    12: 8,\n    13: 9,\n    14: 10,\n    15: 10,\n    16: 11,\n    17: 11,\n    18: 12,\n    19: 12,\n    20: 13,\n    21: 13,\n    22: 14,\n    23: 15,\n    24: 15,\n    25: 16,\n    26: 17,\n    27: 17,\n    28: 18,\n    29: 18,\n    30: 19,\n    31: 19,\n    32: 20,\n    33: 20,\n    34: 21,\n    35: 21,\n    36: 22,\n    37: 23,\n    38: 23,\n    39: 24,\n    40: 25,\n    41: 25,\n    42: 26,\n    43: 26,\n    44: 27,\n    45: 27,\n    46: 28,\n    47: 28,\n    48: 29,\n    49: 29,\n    50: 30,\n    51: 31,\n    52: 31,\n    53: 32,\n    54: 33,\n    55: 34,\n    56: 34,\n    57: 35,\n    58: 36,\n    59: 37,\n    60: 37,\n    61: 38,\n    62: 39,\n    63: 40,\n    64: 41,\n    65: 41,\n    66: 42,\n    67: 42,\n    68: 43,\n    69: 43,\n    70: 44,\n    71: 44,\n    72: 45,\n    73: 46,\n    74: 47,\n    75: 48,\n    76: 48,\n    77: 49,\n    78: 51,\n    79: 53,\n    80: 54,\n    81: 54,\n    82: 55,\n    83: 56,\n    84: 59,\n    85: 60,\n    86: 61,\n    87: 62,\n    88: 63,\n    89: 64,\n    90: 65,\n    91: 66,\n    92: 68,\n    93: 70,\n    94: 77,\n    95: 78,\n    96: 80,\n    97: 89,\n    98: 97,\n    102: 102\n  };\n  #speed;\n  #auto;\n  static load() {\n    return ["images/atlas/images/progress.atlas", \'images/atlas/images/slider.atlas\'];\n  }\n  static #createComponent = (() => Laya.plugin.extractComponents(Trajectory.uiView, [\'boxTrajectoryItem\']))();\n  #createTrajectoryItem() {\n    const item = Trajectory.#createComponent(\'boxTrajectoryItem\');\n    item.labContent = item.getChildByName(\'labContent\');\n    item.labAge = item.getChildByName(\'hboxAge\').getChildByName(\'labAge\');\n    const config = $ui.common.trajectoryItem;\n    $_.deepMapSet(item, config.box);\n    item.grade = grade => {\n      $_.deepMapSet(item, config.grade[grade || 0]);\n    };\n    item.getChildByName(\'hboxAge\')._childs.forEach(child => child.color = config.ageColor);\n    item.labContent.color = config.contentColor;\n    return item;\n  }\n  #isEnd;\n  // #trajectoryItems;\n  #talents;\n  #enableExtend;\n  #printText;\n  #effects;\n  init(_ref) {\n    let {\n      propertyAllocate,\n      talents,\n      enableExtend\n    } = _ref;\n    const types = core.PropertyTypes;\n    console.log(\'trajectory init\', propertyAllocate);\n    this.#printText = "";\n    this.#effects = {\n      "CHR": 0,\n      "INT": 0,\n      "STR": 0,\n      "MNY": 0,\n      "SPR": 0\n    };\n    const newProperty = this.initProperty(propertyAllocate);\n    if (newProperty[types.AFG] == 1) this.labCountry.text = "Afganistan";else if (newProperty[types.CHN] == 1) this.labCountry.text = "China";else if (newProperty[types.EGP] == 1) this.labCountry.text = "Egypt";else if (newProperty[types.IND] == 1) this.labCountry.text = "India";else if (newProperty[types.JPN] == 1) this.labCountry.text = "Japan";else if (newProperty[types.USA] == 1) this.labCountry.text = "USA";\n    this.labSex.text = newProperty[types.LBTQ] == 1 ? "LBTQ" : "Straight";\n    this.#enableExtend = enableExtend;\n    this.boxSpeed.visible = false;\n    this.scbSpeed.value = this.scbSpeed.max * 0.5; // init speed\n    this.btnSummary.visible = false;\n    // this.#trajectoryItems = [];\n    this.#isEnd = false;\n    this.#talents = talents;\n    core.start(newProperty);\n    this.updateProperty();\n    this.onNext();\n  }\n  close() {\n    this.scbSpeed.value = 0;\n    this.speed = 0;\n    // this.#trajectoryItems.forEach(item => {\n    //     item.removeSelf();\n    //     item.destroy();\n    // });\n    // this.#trajectoryItems = null;\n    this.#printText = "";\n  }\n  initProperty(propertyAllocate) {\n    const types = core.PropertyTypes;\n    var max = 0;\n    var newProperty = propertyAllocate;\n    if (propertyAllocate[types.CHR] > max) max = propertyAllocate[types.CHR];\n    if (propertyAllocate[types.INT] > max) max = propertyAllocate[types.INT];\n    if (propertyAllocate[types.STR] > max) max = propertyAllocate[types.STR];\n    if (propertyAllocate[types.MNY] > max) max = propertyAllocate[types.MNY];\n    if (propertyAllocate[types.SPR] > max) max = propertyAllocate[types.SPR];\n    // if any property > 8, add 5 to all other properties\n    if (max > 7) {\n      if (newProperty[types.CHR] < 8) newProperty[types.CHR] = newProperty[types.CHR] < 4 ? newProperty[types.CHR] + 5 : 8;\n      if (newProperty[types.INT] < 8) newProperty[types.INT] = newProperty[types.INT] < 4 ? newProperty[types.INT] + 5 : 8;\n      if (newProperty[types.STR] < 8) newProperty[types.STR] = newProperty[types.STR] < 4 ? newProperty[types.STR] + 5 : 8;\n      if (newProperty[types.MNY] < 8) newProperty[types.MNY] = newProperty[types.MNY] < 4 ? newProperty[types.MNY] + 5 : 8;\n      if (newProperty[types.SPR] < 8) newProperty[types.SPR] = newProperty[types.SPR] < 4 ? newProperty[types.SPR] + 5 : 8;\n    }\n\n    // Printing text\n    if (newProperty[types.AFG] == 1) this.#printText += "Country: Afganistan\\n";else if (newProperty[types.CHN] == 1) this.#printText += "Country: China\\n";else if (newProperty[types.EGP] == 1) this.#printText += "Country: Egypt\\n";else if (newProperty[types.IND] == 1) this.#printText += "Country: India\\n";else if (newProperty[types.JPN] == 1) this.#printText += "Country: Japan\\n";else if (newProperty[types.USA] == 1) this.#printText += "Country: USA\\n";\n    this.#printText += "Sex orientation: ";\n    this.#printText += (newProperty[types.LBTQ] == 1 ? "LBTQ" : "Straight") + "\\n";\n    this.#printText += "Appearance: " + newProperty[types.CHR] + "\\n";\n    this.#printText += "IQ: " + newProperty[types.INT] + "\\n";\n    this.#printText += "Healthy: " + newProperty[types.STR] + "\\n";\n    this.#printText += "Family wealth: " + newProperty[types.MNY] + "\\n";\n    this.#printText += "EQ: " + newProperty[types.SPR] + "\\n";\n    return newProperty;\n  }\n  updateProperty() {\n    const types = core.PropertyTypes;\n    const propertys = core.propertys;\n    this.labCharm.text = propertys[types.CHR] - this.#effects["CHR"];\n    this.labIntelligence.text = propertys[types.INT] - this.#effects["INT"];\n    this.labStrength.text = propertys[types.STR] - this.#effects["STR"];\n    this.labMoney.text = propertys[types.MNY] - this.#effects["MNY"];\n    this.labSpirit.text = propertys[types.SPR] - this.#effects["SPR"];\n  }\n  onNext() {\n    if (this.#isEnd) {\n      this.scbSpeed.value = 0;\n      this.speed = 0;\n      return;\n    }\n    const {\n      age,\n      content,\n      isEnd\n    } = core.next();\n    this.#isEnd = isEnd;\n    if (isEnd) {\n      this.boxSpeed.visible = false;\n      this.btnSummary.visible = true;\n      Laya.timer.frameOnce(1, this, () => {\n        this.panelTrajectory.scrollTo(0, this.panelTrajectory.contentHeight);\n      });\n    }\n\n    // empty events\n    if (JSON.stringify(content) == "{}") return;\n    this.panelTrajectory.scrollTo(0, this.panelTrajectory.contentHeight);\n    this.renderTrajectory(age, content);\n    this.updateProperty();\n    if (this.#isEnd) return;\n  }\n  renderTrajectory(age, content) {\n    const realAge = this.AGE[age];\n    const item = this.#createTrajectoryItem();\n    item.labAge.text = 2022 + realAge + \'\\n Age: \' + realAge;\n    item.labContent.text = content.map(_ref2 => {\n      let {\n        type,\n        description,\n        effect,\n        name,\n        postEvent\n      } = _ref2;\n      if (effect) {\n        if (effect.CHR) {\n          this.#effects["CHR"] = effect.CHR;\n          this.labCharmAdd.visible = true;\n          this.labCharmAdd.text = effect.CHR > 0 ? \'+\' + effect.CHR : effect.CHR;\n        }\n        if (effect.INT) {\n          this.#effects["INT"] = effect.INT;\n          this.labIntelligenceAdd.visible = true;\n          this.labIntelligenceAdd.text = effect.INT > 0 ? \'+\' + effect.INT : effect.INT;\n        }\n        if (effect.STR) {\n          this.#effects["STR"] = effect.STR;\n          this.labStrengthAdd.visible = true;\n          this.labStrengthAdd.text = effect.STR > 0 ? \'+\' + effect.STR : effect.STR;\n        }\n        if (effect.MNY) {\n          this.#effects["MNY"] = effect.MNY;\n          this.labMoneyAdd.visible = true;\n          this.labMoneyAdd.text = effect.MNY > 0 ? \'+\' + effect.MNY : effect.MNY;\n        }\n        if (effect.SPR) {\n          this.#effects["SPR"] = effect.SPR;\n          this.labSpiritAdd.visible = true;\n          this.labSpiritAdd.text = effect.SPR > 0 ? \'+\' + effect.SPR : effect.SPR;\n        }\n      }\n      switch (type) {\n        case \'EVT\':\n          return description + (postEvent ? `\\n${postEvent}` : \'\');\n        case \'TLT\':\n          return `Lucky Charm {${name}}: ${description}`;\n      }\n    }).join(\'\\n\');\n    this.#printText += "Year " + (2022 + realAge) + ", age: " + realAge + "\\n" + item.labContent.text + "\\n";\n    item.grade(content[content.length - 1].grade);\n    this.vboxTrajectory.addChild(item);\n    // this.#trajectoryItems.push(item);\n    item.y = this.vboxTrajectory.height;\n  }\n  onSummary() {\n    // trajectoryItems: this.#trajectoryItems\n    const talents = this.#talents;\n    $ui.switchView(UI.pages.SUMMARY, {\n      talents,\n      printText: this.#printText,\n      enableExtend: this.#enableExtend\n    });\n  }\n  get speed() {\n    return this.#speed;\n  }\n  set speed(speed) {\n    this.#speed = speed;\n    this.prgSpeed.value = speed / this.scbSpeed.max;\n    clearInterval(this.#auto);\n    this.#auto = null;\n    if (!speed) return;\n    this.#auto = setInterval(() => this.onNext(), 3000 * (1 - this.prgSpeed.value) + 300);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8310\n')}}]);